//
// ScheduleAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ScheduleAPI {

    /**
     Get schedule results.
     
     - parameter type: (query) The schedule type. 
     - parameter date: (query) Format: Y-m-d The start date of the schedule. Keep empty for current date. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getSchedule(type: ScheduleKind, date: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return getScheduleWithRequestBuilder(type: type, date: date).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get schedule results.
     - GET /schedule
     - This endpoint will return schedule results for the specified query.
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter type: (query) The schedule type. 
     - parameter date: (query) Format: Y-m-d The start date of the schedule. Keep empty for current date. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func getScheduleWithRequestBuilder(type: ScheduleKind, date: String? = nil) -> RequestBuilder<AnyCodable> {
        let localVariablePath = "/schedule"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "type": (wrappedValue: type.encodeToJSON(), isExplode: true),
            "date": (wrappedValue: date?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
