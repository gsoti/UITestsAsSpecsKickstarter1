//
// EpisodesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class EpisodesAPI {

    /**
     * enum for parameter include
     */
    public enum Include_getEpisodesDetails: String, CaseIterable {
        case show = "show"
        case season = "season"
    }

    /**
     Get specific episode details.
     
     - parameter episodeID: (path) ID of the episode. 
     - parameter include: (query) The relations to include in the response. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getEpisodesDetails(episodeID: Int, include: [Include_getEpisodesDetails]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return getEpisodesDetailsWithRequestBuilder(episodeID: episodeID, include: include).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get specific episode details.
     - GET /episodes/{episodeID}
     - This endpoint will retrieve the details of a specific episode.
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter episodeID: (path) ID of the episode. 
     - parameter include: (query) The relations to include in the response. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func getEpisodesDetailsWithRequestBuilder(episodeID: Int, include: [Include_getEpisodesDetails]? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/episodes/{episodeID}"
        let episodeIDPreEscape = "\(APIHelper.mapValueToPathItem(episodeID))"
        let episodeIDPostEscape = episodeIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{episodeID}", with: episodeIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include[]": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Rate an Episode.
     
     - parameter episodeID: (path) ID of the episode. 
     - parameter rating: (form) The rating to leave. 
     - parameter description: (form) The description accompanying the rating. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func postEpisodeRate(episodeID: Int, rating: Double, description: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return postEpisodeRateWithRequestBuilder(episodeID: episodeID, rating: rating, description: description).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Rate an Episode.
     - POST /episodes/{episodeID}/rate
     - This endpoint will allow user's to leave a rating for an Episode.
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter episodeID: (path) ID of the episode. 
     - parameter rating: (form) The rating to leave. 
     - parameter description: (form) The description accompanying the rating. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func postEpisodeRateWithRequestBuilder(episodeID: Int, rating: Double, description: String? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/episodes/{episodeID}/rate"
        let episodeIDPreEscape = "\(APIHelper.mapValueToPathItem(episodeID))"
        let episodeIDPostEscape = episodeIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{episodeID}", with: episodeIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableFormParams: [String: Any?] = [
            "rating": rating.encodeToJSON(),
            "description": description?.encodeToJSON(),
        ]

        let localVariableNonNullParameters = APIHelper.rejectNil(localVariableFormParams)
        let localVariableParameters = APIHelper.convertBoolToString(localVariableNonNullParameters)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/x-www-form-urlencoded",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Marks an episode as \"watched\" or \"not watched\".
     
     - parameter episodeID: (path) ID of the episode. 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func postEpisodesWatched(episodeID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return postEpisodesWatchedWithRequestBuilder(episodeID: episodeID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Marks an episode as \"watched\" or \"not watched\".
     - POST /episodes/{episodeID}/watched
     - This endpoint will updated the watched status for an episode.
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter episodeID: (path) ID of the episode. 
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func postEpisodesWatchedWithRequestBuilder(episodeID: Int) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/episodes/{episodeID}/watched"
        let episodeIDPreEscape = "\(APIHelper.mapValueToPathItem(episodeID))"
        let episodeIDPostEscape = episodeIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{episodeID}", with: episodeIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
