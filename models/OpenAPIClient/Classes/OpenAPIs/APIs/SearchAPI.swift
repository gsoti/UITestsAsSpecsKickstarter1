//
// SearchAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class SearchAPI {

    /**
     * enum for parameter types
     */
    public enum Types_getSearch: String, CaseIterable {
        case characters = "characters"
        case episodes = "episodes"
        case games = "games"
        case literatures = "literatures"
        case people = "people"
        case shows = "shows"
        case songs = "songs"
        case studios = "studios"
        case users = "users"
    }

    /**
     Get search results.
     
     - parameter scope: (query) The scope of the search. 
     - parameter types: (query) The types used to perform the search. 
     - parameter query: (query) The search query. 
     - parameter limit: (query) The limit on the number of objects, or number of objects in the specified relationship, that are returned. The default value is 25 and the maximum value is 25. (optional)
     - parameter page: (query) The next page or group of objects to fetch. The default value is 1. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getSearch(scope: SearchScope, types: [Types_getSearch], query: String, limit: String? = nil, page: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return getSearchWithRequestBuilder(scope: scope, types: types, query: query, limit: limit, page: page).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get search results.
     - GET /search
     - This endpoint will return search results for the specified query.
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter scope: (query) The scope of the search. 
     - parameter types: (query) The types used to perform the search. 
     - parameter query: (query) The search query. 
     - parameter limit: (query) The limit on the number of objects, or number of objects in the specified relationship, that are returned. The default value is 25 and the maximum value is 25. (optional)
     - parameter page: (query) The next page or group of objects to fetch. The default value is 1. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func getSearchWithRequestBuilder(scope: SearchScope, types: [Types_getSearch], query: String, limit: String? = nil, page: String? = nil) -> RequestBuilder<AnyCodable> {
        let localVariablePath = "/search"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "scope": (wrappedValue: scope.encodeToJSON(), isExplode: true),
            "types[]": (wrappedValue: types.encodeToJSON(), isExplode: true),
            "query": (wrappedValue: query.encodeToJSON(), isExplode: true),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "page": (wrappedValue: page?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
