//
// MyanimelistAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class MyanimelistAPI {

    /**
     * enum for parameter include
     */
    public enum Include_getMyAnimeListAnime: String, CaseIterable {
        case cast = "cast"
        case characters = "characters"
        case relatedShows = "related-shows"
        case relatedGames = "related-games"
        case relatedLiteratures = "related-literatures"
        case seasons = "seasons"
        case songs = "songs"
        case staff = "staff"
        case studios = "studios"
    }

    /**
     (optional authentication) Anime details.
     
     - parameter malID: (path) MyAnimeList ID of the anime. 
     - parameter include: (query) The relations to include in the response. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getMyAnimeListAnime(malID: String, include: [Include_getMyAnimeListAnime]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return getMyAnimeListAnimeWithRequestBuilder(malID: malID, include: include).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     (optional authentication) Anime details.
     - GET /myanimelist/anime/{malID}
     - This endpoint will retrieve the details of an Anime item using the MyAnimeList ID.
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter malID: (path) MyAnimeList ID of the anime. 
     - parameter include: (query) The relations to include in the response. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func getMyAnimeListAnimeWithRequestBuilder(malID: String, include: [Include_getMyAnimeListAnime]? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/myanimelist/anime/{malID}"
        let malIDPreEscape = "\(APIHelper.mapValueToPathItem(malID))"
        let malIDPostEscape = malIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{malID}", with: malIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include[]": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter include
     */
    public enum Include_getMyAnimeListManga: String, CaseIterable {
        case cast = "cast"
        case characters = "characters"
        case relatedShows = "related-shows"
        case relatedGames = "related-games"
        case relatedLiteratures = "related-literatures"
        case staff = "staff"
        case studios = "studios"
    }

    /**
     (optional authentication) Manga details.
     
     - parameter malID: (path) MyAnimeList ID of the manga. 
     - parameter include: (query) The relations to include in the response. (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func getMyAnimeListManga(malID: String, include: [Include_getMyAnimeListManga]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AnyCodable?, _ error: Error?) -> Void)) -> RequestTask {
        return getMyAnimeListMangaWithRequestBuilder(malID: malID, include: include).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     (optional authentication) Manga details.
     - GET /myanimelist/manga/{malID}
     - This endpoint will retrieve the details of an Manga item using the MyAnimeList ID.
     - Bearer Token:
       - type: http
       - name: bearerAuth
     - parameter malID: (path) MyAnimeList ID of the manga. 
     - parameter include: (query) The relations to include in the response. (optional)
     - returns: RequestBuilder<AnyCodable> 
     */
    open class func getMyAnimeListMangaWithRequestBuilder(malID: String, include: [Include_getMyAnimeListManga]? = nil) -> RequestBuilder<AnyCodable> {
        var localVariablePath = "/myanimelist/manga/{malID}"
        let malIDPreEscape = "\(APIHelper.mapValueToPathItem(malID))"
        let malIDPostEscape = malIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{malID}", with: malIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "include[]": (wrappedValue: include?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AnyCodable>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
